import Head from "next/head";
import { api } from "~/utils/api";
import { GetStaticPaths, GetStaticProps, NextPage } from "next";
import { Wrapper } from "~/components/Wrapper";
import { ProfileFeed } from "~/components/ProfileFeed";
import { generateSSGHelper } from "~/server/helpers/ssgHelper";
import { PostView } from "~/components/PostView";

const Post: NextPage<{id: string}> = ({ id }) => {
  const { data } = api.posts.getPostById.useQuery({ id })

  if (!data) {
    return <div>Post does not exist</div>
  }

  return <>
    <Head>
      <title>{`${data.post.content} - @${data.author.username}`}</title>
      <meta name="description" content="Generated by create-t3-app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Wrapper>
      <PostView postWithUser={data} />
    </Wrapper>
  </>
}

export const getStaticProps: GetStaticProps = async (context) => {
 const ssg = generateSSGHelper()

  const id = context.params?.id

  if (typeof  id !== "string") {
    throw new Error("no id")
  }

  await ssg.posts.getPostById.prefetch({ id })

  return {
    props: {
      trpcState: ssg.dehydrate(),
      id
    }
  }
}

export const getStaticPaths: GetStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking"
  }
}

export default Post